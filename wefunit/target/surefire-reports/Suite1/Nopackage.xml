<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="ubuntu" name="Nopackage" tests="116" failures="0" timestamp="20 May 2015 16:35:57 GMT" time="0.768" errors="0">
  <testcase name="interface_DependencyScanner_existence" time="0.039" classname="com.rc.wefunit.DependencyScannerTest"/>
  <testcase name="method_getDependency_DependencySignature_Object_as_return_type" time="0.003" classname="com.rc.wefunit.DependencyScannerTest"/>
  <testcase name="method_getDependency_DependencySignature_as_first_parameter" time="0.0" classname="com.rc.wefunit.DependencyScannerTest"/>
  <testcase name="method_getDependency_exists" time="0.001" classname="com.rc.wefunit.DependencyScannerTest"/>
  <testcase name="method_getDependency_return_WebAppAccess_For_SCBuildersFixture_model" time="0.109" classname="com.rc.wefunit.DependencyScannerTest"/>
  <testcase name="BeforeClass_annotation" time="0.001" classname="com.rc.wefunit.annotations.BeforeClassTest"/>
  <testcase name="BeforeClass_annotation_RetentionPolicy_RUNTIME" time="0.0" classname="com.rc.wefunit.annotations.BeforeClassTest"/>
  <testcase name="BeforeClass_annotation_Target_METHOD" time="0.0" classname="com.rc.wefunit.annotations.BeforeClassTest"/>
  <testcase name="BeforeClass_annotation_enabled_method_default_value_true" time="0.001" classname="com.rc.wefunit.annotations.BeforeClassTest"/>
  <testcase name="is_exist_Interface_TestEngine" time="0.041" classname="com.rc.wefunit.testengine.TestEngineTest"/>
  <testcase name="method_executeTests_parameters_Queue" time="0.007" classname="com.rc.wefunit.testengine.TestEngineTest"/>
  <testcase name="singleton_test" time="0.0" classname="com.rc.wefunit.testengine.TestEngineTest"/>
  <testcase name="constructorTest" time="0.008" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="dependencySignature_field" time="0.001" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="dependencySignature_field_is_private" time="0.001" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="dependencySignature_field_is_private_final" time="0.0" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="dependencySignature_field_is_private_is_of_type_DependencySignature" time="0.001" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="existence_of_class" time="0.001" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="getSignature" time="0.0" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="getSignature_method_is_public" time="0.001" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="getSignature_method_return_type_is_DependencySignature" time="0.0" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="implements_java_lang_comparable" time="0.0" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="method_compare_to_throw_IllegalArgumentException_when_argument_is_not_of_type_FixtureDependency" time="0.001" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="method_getDependency" time="0.001" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="method_getDependencyMethodName_return_WebAppAccess_For_SCBuildersFixture_model" time="0.018" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="method_getDependencyMethodName_return_type_is_Object" time="0.0" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="method_getDependency_method_is_public" time="0.0" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="producerMethod_field" time="0.001" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="producerMethod_field_is_private" time="0.0" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="producerMethod_field_is_private_final" time="0.001" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="producerMethod_field_is_private_is_of_type_Method" time="0.0" classname="com.rc.wefunit.FixtureDependencyTest"/>
  <testcase name="class_existence" time="0.001" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="compareTo_test_1" time="0.001" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="constructor_must_have_Class_as_the_first_parameter_data_type" time="0.001" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="constructor_must_have_an_Annotation_array_as_the_second_parameter_data_type" time="0.0" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="field__qualifiers_is_final" time="0.0" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="field__qualifiers_is_private" time="0.01" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="field_qualifiers" time="0.009" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="field_qualifiers_is_an_Array_of_Type_Annotation" time="0.001" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="field_returnedObjectType" time="0.001" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="field_returnedObjectType_field_type_is_java_lang_Class" time="0.001" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="field_returnedObjectType_is_final" time="0.0" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="field_returnedObjectType_is_private" time="0.001" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="implements_java_lang_Comparator" time="0.0" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="method_getReturnedObjectType" time="0.0" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="presence_of_equals_and_hashcode_methods" time="0.0" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="the_only_constructor_is_public" time="0.0" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="there_is_only_one_constructor" time="0.0" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="throw_IllegalStateException_when_provided_annotation_is_not_a_Qualifier" time="0.002" classname="com.rc.wefunit.DependencySignatureTest"/>
  <testcase name="inject_method_with_2_parameters_Field_and_Object1_GenericServiceOperationTest_serviceOperationName_field_1" time="0.0" classname="com.rc.wefunit.FixtureDependencyInjectorUtilityTest"/>
  <testcase name="method_inject_should_inject_WebAppAccess_For_SCBuildersFixture_model" time="0.026" classname="com.rc.wefunit.FixtureDependencyInjectorUtilityTest"/>
  <testcase name="must_throw_IllegalStateException_when_a_non_injectable_field_is_provided_to_inject_method" time="0.001" classname="com.rc.wefunit.FixtureDependencyInjectorUtilityTest"/>
  <testcase name="filterQualifierAnnotations" time="0.0" classname="com.rc.wefunit.CommonUtilsTest"/>
  <testcase name="filterQualifierAnnotations_functional_test" time="0.0" classname="com.rc.wefunit.CommonUtilsTest"/>
  <testcase name="method_createPath" time="-1.432139757385E9" classname="com.rc.wefunit.CommonUtilsTest"/>
  <testcase name="method_getAsUnixPath" time="0.0" classname="com.rc.wefunit.CommonUtilsTest"/>
  <testcase name="method_getAsWindowsPath" time="0.0" classname="com.rc.wefunit.CommonUtilsTest"/>
  <testcase name="method_getOSPlatform_returns_1_for_Linux" time="-1.432139757423E9" classname="com.rc.wefunit.CommonUtilsTest"/>
  <testcase name="method_getOSPlatform_returns_2_for_Windows" time="-1.432139757444E9" classname="com.rc.wefunit.CommonUtilsTest"/>
  <testcase name="method_getSuperClassesHierarchy" time="0.0" classname="com.rc.wefunit.CommonUtilsTest"/>
  <testcase name="method_getTestMethodsArray" time="0.003" classname="com.rc.wefunit.CommonUtilsTest"/>
  <testcase name="method_getTestMethodsArray_test_for_GeneServiceOperationTest" time="0.001" classname="com.rc.wefunit.CommonUtilsTest"/>
  <testcase name="test_CommonUtils_is_singleton_when_get_from_factory" time="0.001" classname="com.rc.wefunit.CommonUtilsTest"/>
  <testcase name="Runner_instance_must_be_singleton" time="0.001" classname="com.rc.wefunit.RunnerTest"/>
  <testcase name="method_getWebAppAccess_existence" time="0.0" classname="com.rc.wefunit.RunnerTest"/>
  <testcase name="method_getWebAppAccess_throw_IllegalStateException_when_called_before_calling_run_method" time="0.0" classname="com.rc.wefunit.RunnerTest"/>
  <testcase name="method_getWebInfDirPath_web_INF_directory_path_web_inf_as_last_directory" time="0.007" classname="com.rc.wefunit.RunnerTest"/>
  <testcase name="method_run" time="0.0" classname="com.rc.wefunit.RunnerTest"/>
  <testcase name="method_run_with_parameters_WebAppAccess_And_ClassLoader_existence" time="0.0" classname="com.rc.wefunit.RunnerTest"/>
  <testcase name="method_scanTestClasses_scan_for_test_classes_must_throw_IllegalStateException_when_WEB_INF_dir_is_not_a_wef_project" time="0.008" classname="com.rc.wefunit.RunnerTest"/>
  <testcase name="abstract_method_parameter_count_test" time="0.0" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="getter_for_dataServiceName" time="0.0" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="getter_for_serviceOperationName" time="0.0" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="getter_for_webAppAccess" time="0.001" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_dataServiceName_field_with_DATA_SERVICE_NAME_annotation" time="0.0" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_dataServiceName_field_with_DATA_SERVICE_NAME_annotation_with_value_DATA_SERVICE_NAME_present" time="0.0" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_dataServiceName_string_field_contains_Inject_annotation" time="0.0" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_dataServiceName_string_field_is_present" time="0.001" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_serviceOperationName_string_field_contains_Inject_annotation" time="0.001" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_serviceOperationName_string_field_is_protected" time="0.0" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_serviceOperationName_string_field_present" time="0.0" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_service_operation_exists_Method_exists" time="0.001" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_service_operation_exists_method_should_have_Test_annotation" time="0.001" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_service_operation_name_is_in_correct_format_Method_exists" time="0.0" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_webAppAccess_field_with_GenericSODependency_annotation_present" time="0.001" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_webAppAccess_field_with_GenericSODependency_annotation_with_value_SERVICE_CONSUMER_BUILDER_FIXTURE_MODEL_present" time="0.006" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_webAppAccess_field_with_Inject_annotation_present" time="0.0" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="is_webAppAccess_field_with_service_consumer_fixtures_annotation_is_protected" time="0.0" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="method_getCallableServiceOperationName_functional_test" time="0.001" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="method_is_service_operation_exists_functional_tests" time="0.097" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="method_is_service_operation_name_is_in_correct_format_contains_Test_annotation" time="0.005" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="method_is_service_operation_name_is_in_correct_format_contains_Test_annotation_functional_tests" time="0.026" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="serviceOperationName_field_is_GenericSODependency_annotation_present" time="0.001" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="serviceOperationName_field_is_GenericSODependency_annotation_with_value_SERVICE_OPERATION_NAME_present" time="0.001" classname="com.rc.wefunit.GenericServiceOperationTestTest"/>
  <testcase name="test" time="0.0" classname="com.rc.wefunit.annotations.Annotations"/>
  <testcase name="test_enabled_method" time="0.003" classname="com.rc.wefunit.annotations.Annotations"/>
  <testcase name="DATA_SERVICE_NAME" time="0.0" classname="com.rc.wefunit.enums.GenericSOInjectablesTest"/>
  <testcase name="SERVICE_OPERATION_NAME" time="0.0" classname="com.rc.wefunit.enums.GenericSOInjectablesTest"/>
  <testcase name="SERVICE_OPERATION_NAME_INDEX_0" time="0.001" classname="com.rc.wefunit.enums.GenericSOInjectablesTest"/>
  <testcase name="method_getTotalExecutableTestsCount" time="0.001" classname="com.rc.wefunit.TestClassStatsTest"/>
  <testcase name="method_getSCBuildersFixturesModel" time="0.001" classname="com.rc.wefunit.producers.FactoryProducersTest"/>
  <testcase name="method_getSCBuildersFixturesModel_throw_IllegalStateException_when_a_model_named_SCBuildersFixture_is_not_found" time="0.01" classname="com.rc.wefunit.producers.FactoryProducersTest"/>
  <testcase name="is_a_Qualifier" time="0.0" classname="com.rc.wefunit.annotations.GenericSODependencyTest"/>
  <testcase name="is_annotation_GenericSODependency" time="0.0" classname="com.rc.wefunit.annotations.GenericSODependencyTest"/>
  <testcase name="is_value_method_present" time="0.001" classname="com.rc.wefunit.annotations.GenericSODependencyTest"/>
  <testcase name="target" time="0.0" classname="com.rc.wefunit.annotations.GenericSODependencyTest"/>
  <testcase name="target_METHOD_AND_FIELD" time="0.001" classname="com.rc.wefunit.annotations.GenericSODependencyTest"/>
  <testcase name="class_Assert_existence" time="0.001" classname="com.rc.wefunit.probes.AssertTest"/>
  <testcase name="method_assertNotNull_throw_AssertionError_no_Throwable_when_object_is_not_null" time="0.0" classname="com.rc.wefunit.probes.AssertTest"/>
  <testcase name="method_assertNotNull_throw_AssertionError_when_object_is_null" time="0.007" classname="com.rc.wefunit.probes.AssertTest"/>
  <testcase name="method_assertNotNull_with_one_argument_Object" time="0.007" classname="com.rc.wefunit.probes.AssertTest"/>
  <testcase name="method_assertTrue_is_public_static_with_only_one_argument_Object" time="0.0" classname="com.rc.wefunit.probes.AssertTest"/>
  <testcase name="method_assertTrue_no_Throwable_when_argument_is_true" time="0.001" classname="com.rc.wefunit.probes.AssertTest"/>
  <testcase name="method_assertTrue_throw_java_lang_AssertionError_when_argument_is_false" time="0.0" classname="com.rc.wefunit.probes.AssertTest"/>
  <testcase name="method_fail_with_no_params" time="0.0" classname="com.rc.wefunit.probes.AssertTest"/>
  <testcase name="method_fail_with_string_argument" time="0.0" classname="com.rc.wefunit.probes.AssertTest"/>
</testsuite> <!-- Nopackage -->
